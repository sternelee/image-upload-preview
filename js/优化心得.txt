1 在图片预览的时候，前期预览函数没有返回，而是将图片数据放在canvas中后,append到页面上，供后续调用。
看到（别人做的那种）缩放和旋转都比较流畅，
遂发现用变量保存的方式比append到页面保存会更快(优化空间显而易见),遂将预览的图片用canvas的形式变量返回给一个变量，供后续移动，缩放和旋转

2 原先在file图片读取的时候,在android和ios做了区分。
	android用getObjectURL
	IOS用的fileReader
	为的是兼容android低端机
3 读取图片颠倒信息的时候,android 低端机Object.prototype.toString.call 获取的类型有的时候不是blob而是string,这个时候要用arrayBuffer做转换可以读取1024*10的数据便可，因为低端机在读取大量数据字符的时候会奔溃或者直接不执行了

4 再一个比较好的发现，是有的android手机初次不能渲染尺寸太大的图片，需要以大概小于1000尺寸才能正确展示出来.
    遂优化了统一用IOS图片渲染的方式来做
5 中心点旋转和缩放的问题(之前做的是基于cavnas默认的中心点来做移动、缩放、旋转的，在用户操作过程中体验没有一突破的中心点好，遂优化了)